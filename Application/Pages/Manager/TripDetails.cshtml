@page "/manager/trips/{tripId:guid}"
@using Data.Enums
@using Application.Pages.Manager
@model Application.Pages.Manager.TripDetailsModel
@{
    ViewData["Title"] = "Trip Details";
}

<style>
    /* Remove borders from list items */
    .list-group-item {
        border: none;
    }
</style>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.Page("Tours")" style="text-decoration: none">Tours</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">
            <a href="@Url.Page("TourDetails", new { TourId = Model.Tour.Id })" style="text-decoration: none">@Model.Tour.Id</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">Trips</li>
        <li class="breadcrumb-item active" aria-current="page">@Model.Trip.Id</li>
    </ol>
</nav>

<hr/>

<div class="container mt-5">
    <div class="row">

        <!-- Tour Info -->
        <div class="col-md-6">
            <div class="card" style="background-color: #f8f9fa; padding: 20px">
                <img src="@Model.Tour.ThumbnailUrl" alt="Tour Thumbnail" style="max-height: 200px; object-fit: contain; margin-bottom: 12px">
                <div>
                    <p>
                        <strong>ID: <span style="color: #40916c">@Model.Tour.Id.ToString().ToUpper()</span></strong>
                    </p>
                    <p>
                        <strong>Title: <span class="card-title" style="color: #3f37c9">@Model.Tour.Title</span></strong>
                    </p>
                    <p><strong>Type & Duration:</strong> @Model.Tour.Type (@Model.Tour.Duration)</p>
                    <p><strong>Departure & Destination:</strong> @Model.Tour.Departure / @Model.Tour.Destination</p>
                    <p>
                        <strong>Created At:</strong> @Model.Tour.CreatedAt
                    </p>
                </div>
            </div>
        </div>

        <!-- Trip Info -->
        <div class="col-md-6">
            <div class="card" style="background-color: #f8f9fa; padding: 20px">
                <div>
                    <h4 class="mb-4">Trip Info: </h4>
                    <p>
                        <strong>ID: <span style="color: #40916c">@Model.Trip.Id.ToString().ToUpper()</span></strong>
                    </p>
                    <p>
                        <strong>Code:<span class="card-title" style="color: #3f37c9"> @Model.Trip.Code</span></strong>
                    </p>
                    <p>
                        <strong>Start Time:&nbsp;</strong> <b style="color: #9A3B3B">@DateOnly.FromDateTime(Model.Trip.StartTime)</b>
                    </p>
                    <p>
                        <strong>End Time:&nbsp;&nbsp;&nbsp;</strong> <b style="color: #9A3B3B">@DateOnly.FromDateTime(Model.Trip.EndTime)</b>
                    </p>
                    <p>
                        <strong>Created At: </strong> @Model.Trip.CreatedAt
                    </p>
                </div>
            </div>
        </div>

    </div>
</div>

<hr/>

<div class="row">
    <!-- Groups and Travelers Table -->
    <div class="col col-md-6">
        <h4>Members: </h4>
        <!-- Table -->
        <div class="row mt-4">
            <div class="col-md-12">
                <table class="table table-bordered">
                    <thead>
                    <tr>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Gender</th>
                        <th>Role</th>
                    </tr>
                    </thead>

                    <!-- Table Data -->

                    @foreach (var group in Model.Trip.TourGroups.OrderBy(g => g.GroupNo))
                    {
                        <tbody>
                        <tr>
                            <th colspan="6" scope="col" style="color: #9e2a2b">
                                Group @group.GroupNo:
                                @switch (group.Status)
                                {
                                    case TourGroupStatus.Active:
                                        <span class="text-primary">@group.Status.ToString().ToUpper()</span>
                                        break;
                                    case TourGroupStatus.Ended:
                                        <span class="text-dark">@group.Status.ToString().ToUpper()</span>
                                        break;
                                    default:
                                        throw new ArgumentOutOfRangeException();
                                }
                            </th>
                        </tr>
                        @foreach (var user in Model.GetUsersInGroup(group))
                        {
                            <!-- Each User -->
                            <tr>
                                <td class="text-primary">
                                    <span>@user.Email</span>
                                </td>
                                <td>@user.Phone</td>
                                <td>@user.FirstName</td>
                                <td>@user.LastName</td>
                                <td>@user.Gender</td>
                                <td>
                                    @{
                                        var roleColor = user.Role is UserRole.TourGuide
                                            ? "text-primary" : "text-success";
                                    }
                                    <b class="@roleColor">@user.Role</b>
                                </td>
                            </tr>
                        }
                        </tbody>
                    }

                </table>
            </div>
        </div>
    </div>

    <div class="col col-md-6" style="padding-left: 40px">
        <h4>Incurred Costs: </h4>
        @{
            var incurredCostsNotEmpty = Model.Trip.TourGroups.Any(g => g.IncurredCostActivities.Count > 0);
        }

        @if (incurredCostsNotEmpty)
        {
            @foreach (var group in Model.Trip.TourGroups.Where(g => g.IncurredCostActivities.Count > 0))
            {
                var totalCostInGroup = group.IncurredCostActivities.Select(a => a.Cost).Sum();
                <li class="list-group-item">
                    <h4 style="color: #9e2a2b">
                        Group @group.GroupNo total:
                        <b style="color: #65451F">@TripDetailsModel.FormatMoney(totalCostInGroup)</b>
                    </h4>
                    <ul class="list-group">
                        <!-- Incurred Costs -->
                        @foreach (var cost in group.IncurredCostActivities.Select((value, i) => new { value, i = i + 1 }))
                        {
                            <li class="list-group-item">
                                <div class="row">
                                    <div class="col-md-9">
                                        <p>
                                            <b>Note: </b> <b class="text-primary">@cost.value.Note</b>
                                        </p>
                                        @* <p> *@
                                        @*     <b>Note:</b> @cost.value.Note *@
                                        @* </p> *@
                                        <p>
                                            <b>Amount: <span style="color: #157811">@TripDetailsModel.FormatMoney(cost.value.Cost)</span></b>
                                        </p>
                                        <p>
                                            <b>Date:</b> @cost.value.CreatedAt
                                        </p>
                                    </div>

                                    @if (cost.value.Image != null)
                                    {
                                        <div class="col-md-3">
                                            <img src="@Model.CloudStorageService.GetMediaLink(cost.value.Image?.FileName)" width="150px" height="150px" alt="@cost.value.Image?.Id">
                                        </div>
                                    }
                                </div>
                            </li>
                        }
                        <!-- End Costs -->
                    </ul>
                </li>
                <hr>
            }
            <!-- End Groups -->
        }
        else
        {
            <h6>There are no records yet.</h6>
        }
        @{
            var totalCost = Model.Trip.TourGroups
                .SelectMany(g => g.IncurredCostActivities)
                .Select(a => a.Cost)
                .Sum();
        }
        <h3 style="color: #E55807"><b>Trip Total: </b><b style="color: #084f09">@TripDetailsModel.FormatMoney(totalCost)</b></h3>

    </div>
</div>